#!/usr/bin/env perl
use warnings;
use strict;
use utf8;
binmode(STDOUT, ":utf8");
use LWP::Simple qw/get/;
use Getopt::Long;
use Pod::Usage;
use JSON;
use Term::ANSIColor qw/:constants/;
use I18N::Langinfo qw(langinfo CODESET);
my $codeset = langinfo(CODESET);
use Encode qw(decode);
@ARGV = map { decode $codeset, $_ } @ARGV;
use constant {
	DAUM_ENDIC_URL => "http://apis.daum.net/dic/endic?apikey=%s&kind=WORD&output=json&q=%s"
};

our $VERSION = '0.03';

my %options;
GetOptions(\%options, "--help");

run(\%options, @ARGV);

sub run {
    my($opts, @words) = @_;

    if ($opts->{help}) {
        pod2usage(0);
    }

	if (@words == 0) {
		push @words, join '', <STDIN>;
	}

	for my $word (@words) {
		local $Term::ANSIColor::AUTORESET = 1;
		print BOLD BLUE $word, "\n";
		my $result = from_json(get_daum($word));
		for my $word (@{ $result->{channel}->{item} }) {
			print "$word->{title}\n";
			print "\t$word->{description}\n";
		}
	}
}

sub get_daum {
    my $word = shift;
	unless ($ENV{DAUM_ENDIC_KEY}) {
		die "this service required daum dictionary api key. See http://dna.daum.net/griffin/do/DevDocs/read?bbsId=DevDocs&articleId=11";
	}
	my $url = sprintf(DAUM_ENDIC_URL, $ENV{DAUM_ENDIC_KEY}, $word);
	return get($url);
}

__END__

=head1 NAME

eng2kor - English to Korean
Dictionary Service, it using daum english dictionary api

=head1 VERSION

Version $VERSION

=head1 SYNOPSIS

	export DAUM_ENDIC_KEY=e4208a9e48744c40f2b7459162062313ed9878f6		# note: invalid key
	eng2kor "word"
	eng2kor some thing "something"
	echo "word" | eng2kor

=head1 INSTALL

	perl Makefile.PL
	make
	make test
	make install

=head1 AUTHOR

hshong, C<< <hshong at perl.kr> >>

=head1 LICENSE AND COPYRIGHT

same as Perl.

=head1 SEE ALSO

L<http://dna.daum.net/griffin/do/DevDocs/read?bbsId=DevDocs&articleId=11>

=cut

1; # End of eng2kor
