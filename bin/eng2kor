#!/usr/bin/env perl
use strict;
use warnings;
use utf8;
use Encode qw/encode decode/;
use Pod::Usage;
use Getopt::Long;
use App::eng2kor;

if ( $^O =~ m/win/i ) { # for Windows
    binmode STDIN,  ':encoding(euc-kr)';
    binmode STDOUT, ':encoding(euc-kr)';
    @ARGV = map { decode( 'euc-kr', $_ ) } @ARGV;
}
else {
    binmode STDIN,  ':encoding(UTF-8)';
    binmode STDOUT, ':encoding(UTF-8)';
    @ARGV = map { decode( 'utf8', $_ ) } @ARGV;
}

my %options;
GetOptions( \%options, "--lang=s", "--reverse", "--help" );
pod2usage( 0, -noperldoc => 1 ) if $options{help};

my $app = App::eng2kor->new;
$app->fromto('ko|en') if $options{reverse};
$app->fromto( $options{lang} ) if $options{lang};
unshift @ARGV, join '', <STDIN> if @ARGV == 0;
for my $word (@ARGV) {
    print "\e[7m$word\e[m\n";
    $app->word($word);
    my @result = $app->translate;
    for my $item (@result) {
        print $item->{origin}, "\n";
        print "\t$item->{translated}\n";
    }
}

__END__

=head1 NAME

eng2kor - English to Korean Dictionary for tty

=head1 SYNOPSIS

	eng2kor --help

	eng2kor "english"                                                   # eng2kor
	eng2kor some thing "something"                                      # multiple
	eng2kor "this is sentence"                                          # sentence
	eng2kor --lang='ko|en' 한쿡말                                       # kor2eng
	eng2kor --reverse 한쿡말                                            # kor2eng alias
	echo "word" | eng2kor                                               # pipe input
	export DAUM_ENDIC_KEY=e4208a9e48744c40f2b7459162062313ed9878f6      # note: just sample, invalid key

=head1 SEE ALSO

* L<http://dna.daum.net/griffin/do/DevDocs/read?bbsId=DevDocs&articleId=11>

* L<http://code.google.com/intl/en/apis/ajaxlanguage/>

=head1 AUTHOR

  hshong <hshong@perl.kr>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2010 by hshong.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut

1; # End of eng2kor
